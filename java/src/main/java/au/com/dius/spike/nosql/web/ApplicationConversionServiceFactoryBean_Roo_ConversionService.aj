// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.com.dius.spike.nosql.web;

import au.com.dius.spike.nosql.domain.Order;
import au.com.dius.spike.nosql.repository.OrderRepository;
import au.com.dius.spike.nosql.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    OrderRepository ApplicationConversionServiceFactoryBean.orderRepository;
    
    public Converter<Order, String> ApplicationConversionServiceFactoryBean.getOrderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<au.com.dius.spike.nosql.domain.Order, java.lang.String>() {
            public String convert(Order order) {
                return new StringBuilder().append(order.getCustomerName()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Order> ApplicationConversionServiceFactoryBean.getIdToOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, au.com.dius.spike.nosql.domain.Order>() {
            public au.com.dius.spike.nosql.domain.Order convert(java.math.BigInteger id) {
                return orderRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Order> ApplicationConversionServiceFactoryBean.getStringToOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, au.com.dius.spike.nosql.domain.Order>() {
            public au.com.dius.spike.nosql.domain.Order convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Order.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getOrderToStringConverter());
        registry.addConverter(getIdToOrderConverter());
        registry.addConverter(getStringToOrderConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
